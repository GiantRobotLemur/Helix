//! @file Main.cpp
//! @brief The definition of the entry point to the 32-bit C++ portion of the
//! boot loader.
//! @author GiantRobotLemur@na-se.co.uk
//! @date 2024
//! @copyright This file is part of the Helix operating system project which is
//! released under GPL 3 license. See LICENSE file at the repository root or go
//! to https://github.com/GiantRobotLemur/Helix for full license details.
////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Dependency Header File Includes
///////////////////////////////////////////////////////////////////////////////
#include <stddef.h>

///////////////////////////////////////////////////////////////////////////////
// Macro Definitions
///////////////////////////////////////////////////////////////////////////////

namespace {
///////////////////////////////////////////////////////////////////////////////
// Local Function Definitions
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Local Data Type Definitions
///////////////////////////////////////////////////////////////////////////////

} // anonymous namespace

///////////////////////////////////////////////////////////////////////////////
// Member Function Definitions
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Stand-Alone Function Definitions
///////////////////////////////////////////////////////////////////////////////
extern "C" void main(void)
{
    constexpr size_t BufferPitch = 80 * 2;
    char *videoBuffer = reinterpret_cast<char *>(0xB8000);
    const char message[] = "Hello World!";

    // Move down a line.
    videoBuffer += BufferPitch;

    // Copy the message to the video buffer.
    for (size_t i = 0; message[i]; ++i)
    {
        videoBuffer[i * 2] = message[i];
    }
}


///////////////////////////////////////////////////////////////////////////////
